<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:PdfViewer="clr-namespace:Syncfusion.Windows.PdfViewer;assembly=Syncfusion.PdfViewer.WPF"
    x:Class="_11_Image_Processing.MainWindow"
    xmlns:local="clr-namespace:_11_Image_Processing"
    xmlns:ln="clr-namespace:_11_Image_Processing.Resources.Strings"
        mc:Ignorable="d"
    Title="{x:Static ln:Strings.NameOfAplication}"
        Icon="/Resources/imag.ico"
       Background="Azure"
    
    Closing="Window_Closing" Closed="Window_Closed"  >

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" MouseDown="DockPanel_MouseDown" Background="{DynamicResource menuBrushBackground}">
           <Image Source="/Resources/imag.ico" Height="20" Margin="3"/>

            <Menu  DockPanel.Dock = "Left" IsMainMenu="True" Background="Transparent" >
                <Button x:Name="Menu_Project" Height="30" Click="Menu_Project_Click" Background="Transparent"  BorderThickness="0" HorizontalAlignment="Stretch" >
                    <Label Content="Project" Foreground="White"></Label>
                </Button>

                <!--<MenuItem x:Name="Menu_Edit" Header="{x:Static ln:Strings.Edit}" IsEnabled="False" >
                    <MenuItem x:Name="Menu_Edit_Questions" Header="{x:Static ln:Strings.Document}" Click="Menu_Edit_Questions_Click"/>
                    <MenuItem x:Name="Menu_Edit_Boxes" Header="{x:Static ln:Strings.AddBoxes}" Command="local:Commands.EditView"/>
                </MenuItem>-->

                <MenuItem x:Name="Menu_Export" Header="{x:Static ln:Strings.Export}" IsEnabled="False">
                    <MenuItem x:Name="Menu_Export_ToJPEG" Header="{x:Static ln:Strings.JPEG}" Click="Menu_Export_ToJPEG_Click"/>
                    <MenuItem x:Name="Menu_Export_ToPNG" Header="{x:Static ln:Strings.PNG}" Click="Menu_Export_ToPNG_Click"/>

                    <MenuItem x:Name="Menu_PDF" Header="{x:Static ln:Strings.PDF}" Click="Menu_Export_PDF_Click"/>
                </MenuItem>

                <MenuItem x:Name="Menu_Print" Header="{x:Static ln:Strings.Print}" IsEnabled="False" Click="Menu_Print_Click"/>

                <MenuItem x:Name="Menu_Read" Header="{x:Static ln:Strings.Read}" IsEnabled="False">
                    <!--<MenuItem x:Name="Menu_Read_PNG" Header="{x:Static ln:Strings.OnePNGtocheck}" Click="Menu_Read_PNG_Click"/>-->
                    <MenuItem x:Name="Menu_Read_PDF" Header="{x:Static ln:Strings.PDFfile}" Click="Menu_Read_PDF_Click"/>

                    <MenuItem x:Name="Menu_Read_ListOfScans" Header="{x:Static ln:Strings.Files}">
                        <MenuItem x:Name="Menu_Read_ListOfScans_OnePage" Header="{x:Static ln:Strings.OnePaged}" Click="Menu_Read_ListOfScans_OnePage_Click"/>
                        <MenuItem x:Name="Menu_Read_ListOfScans_Dialog" Header="{x:Static ln:Strings.More}" Click="Menu_Read_ListOfScans_Dialog_Click"/>
                    </MenuItem>
                    <MenuItem x:Name="Menu_Read_Scan" Header="{x:Static ln:Strings.Scanner}" Click="Menu_Read_Scan_Click"/>

                </MenuItem>

                <MenuItem x:Name="Menu_Eavluate" Header="{x:Static ln:Strings.Evaluate}" Click="Menu_Eavluate_Click" IsEnabled="False"/>

                <MenuItem x:Name="Menu_View" Header="{x:Static ln:Strings.View}" Background="#FF2B9099">
                    <MenuItem x:Name="Menu_View_Main" Header="Overview" Click="Menu_View_Main_Click" InputGestureText="Ctrl+W"/>
                    <MenuItem x:Name="Menu_View_Edit" Header="Edit" IsEnabled="False" Click="Menu_View_Edit_Click" InputGestureText="Ctrl+E"/>
                    <MenuItem x:Name="Menu_View_Result" Header="Results"  IsEnabled="False" Click="Menu_View_Result_Click" InputGestureText="Ctrl+R"/>
                </MenuItem>

                <MenuItem x:Name="Menu_Help" Header="{x:Static ln:Strings.Help}">
                    <MenuItem x:Name="Menu_Help_HTML" Header="{x:Static ln:Strings.HTML}" Click="Menu_Help_HTML_Click"/>
                    <MenuItem x:Name="Menu_Help_CHM" Header="{x:Static ln:Strings.CHM}" Click="Menu_Help_CHM_Click"/>
                </MenuItem>

                <MenuItem x:Name="Menu_Settions" Header="{x:Static ln:Strings.Settings}" Click="Menu_Settings_Click"/>
            </Menu >
            <Image x:Name="lockImage" Margin="50,0,0,0" Height="16" Visibility="Hidden" Source="/Resources/icons8-lock-128.ico" />


            <Label  x:Name="windowHeader" Foreground="White"/>
            <Border HorizontalAlignment="Right" DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
                    <Button  Background="Transparent"  BorderBrush="Transparent" Click="CloseClick" Height="30" Width="40">
                        <Image Source="/Resources/icons8-close-50.png" Height="15"/>
                    </Button>
                    <!--Content="{x:Static ln:Strings.Close}"-->
                    <Button Background="Transparent" BorderBrush="Transparent" Width="40" Height="30" Click="MaximazeClick">
                        <Image Source="/Resources/icons8-full-screen-50.png" Height="15"/>

                    </Button>
                    <Button  Width="40" Height="30"  Background="Transparent" BorderBrush="Transparent" Click="MinimazeClick" >
                        <Image Source="/Resources/icons8-subtract-24.png"  Height="10" Margin="0,10,0,7"/>

                    </Button>
                    <!--Content="{x:Static ln:Strings.Minimize}"-->
                </StackPanel>
            </Border>
        </DockPanel>

        <Grid Grid.Row="1" Name="bottomSpaceOfWindow" AllowDrop="True" DragOver="bottomwindowpart_DragOver">
            <Grid x:Name="porjectwindow">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="1" x:Name="recentProjectsHideThisTool" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    
                    <StackPanel Grid.Column="0">
                        <Label Content="{x:Static ln:Strings.New}" FontSize="35" Margin="20,20,20,0"/>
                        <Line Width="100" HorizontalAlignment="Left" Margin="30,0,0,0" Height="2" StrokeThickness="5" Stroke="Black"/>
                    </StackPanel>

                    <StackPanel x:Name="newOptions" Grid.Row="1">
                        <Button Height="220" Margin="30,20,30,20" Background="AliceBlue" BorderBrush="#FF0669AC" Click="Menu_Load_PDF_Click">
                            <StackPanel>
                                
                            <Image Source="/Resources/icone-pdf-symbole-png-rouge.png" Height="100" />
                                <Label Content="{x:Static ln:Strings.FromExistingPDF}" HorizontalAlignment="Center" FontSize="18"/>
                            </StackPanel>

                        </Button>
                        <Button Height="220" Margin="30,20,30,20" Background="AliceBlue" BorderBrush="#FF0669AC" Click="Menu_Load_Word_Click">
                            <StackPanel>

                                <Image Source="/Resources/PngItem_339973.png" Height="100"/>

                                <Label Content="{x:Static ln:Strings.FromWordDocument}" HorizontalAlignment="Center" FontSize="18"/>
                            </StackPanel>

                        </Button>
                    </StackPanel>
                    
                    <Line X1="1" Y1="0" X2="1" Y2="800" Stroke="Black"    StrokeThickness="2"  HorizontalAlignment="Left" Grid.RowSpan="10"/>
                    <Line X1="0" Y1="0" X2="0" Y2="800" Stroke="Black"    StrokeThickness="2"  HorizontalAlignment="Right" Grid.RowSpan="10"/>
                    <Line X1="0" Y1="0" X2="2800" Y2="0" Stroke="Black"    StrokeThickness="2"  VerticalAlignment="Bottom" Grid.Row="0" Grid.ColumnSpan="10"/>

                    <Button Margin="0,0,0,2" Grid.Column="1" x:Name="Menu_Project_Open" Background="Transparent" Click="Menu_Open_Project_Click" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" BorderThickness="0">                        
                        <Label Content="{x:Static ln:Strings.Open}" FontSize="35" Margin="20,20,20,0"/>
                    </Button>

                    <ScrollViewer    Grid.Row="1" Grid.Column="1">
                        <StackPanel>
                            
                            <Canvas Height="40" >
                                <Label Content="{x:Static ln:Strings.Project}" />
                                <Label Content="{x:Static ln:Strings.LastEdit}" Canvas.Left="550"/>
                                <Label Content="{x:Static ln:Strings.LastOpened}" Canvas.Left="730"/>
                            </Canvas>
                        <StackPanel x:Name="recentProjects">
                        </StackPanel>
                        </StackPanel>
                    </ScrollViewer>


                </Grid>
                <Grid x:Name="porjectwindow_infotab" Margin="10,5,0,0"  Visibility="Hidden" Grid.Column="1">
                    <!--ShowGridLines="True"-->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{x:Static ln:Strings.ProjectName}"                     Grid.Row="0" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.ProjectFileName}"                 Grid.Row="1" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.ProjectLocation}"                 Grid.Row="2" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.OriginalDoc}"                     Grid.Row="3" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.Numberofpages}"                   Grid.Row="4" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.Numberofquestions}"               Grid.Row="5" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.Numberofboxes}"                   Grid.Row="6" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.Numberoftextfields}"              Grid.Row="7" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.Dateoflastsave}"                  Grid.Row="8" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.LoadedScans}"                     Grid.Row="9" Grid.Column="0"/>
                    <TextBlock Text="{x:Static ln:Strings.Locked}"                          Grid.Row="10" Grid.Column="0"/>





                    <TextBlock x:Name="projecttext"         Grid.Row="0" Grid.Column="1"  />
                    <TextBlock x:Name="projectfilenametext" Grid.Row="1" Grid.Column="1"  />
                    <TextBlock x:Name="locationtext"        Grid.Row="2" Grid.Column="1" />
                    <TextBlock x:Name="originalDoc"         Grid.Row="3" Grid.Column="1" />
                    <TextBlock x:Name="pagecounttext"       Grid.Row="4" Grid.Column="1" />
                    <TextBlock x:Name="questioncounttext"   Grid.Row="5" Grid.Column="1" />
                    <TextBlock x:Name="boxcounttext"        Grid.Row="6" Grid.Column="1" />
                    <TextBlock x:Name="fieldcounttext"      Grid.Row="7" Grid.Column="1" />
                    <TextBlock x:Name="dateoflastsavetext"  Grid.Row="8" Grid.Column="1" />
                    <TextBlock x:Name="loadedScans"         Grid.Row="9" Grid.Column="1" />
                    <Button  x:Name="lockButton"            Grid.Row="10" Grid.Column="1" Click="lockButton_Click" Width="50" HorizontalAlignment="Left" />


                    <Button Content="{x:Static ln:Strings.Reload}" x:Name="reloadButton" Style="{DynamicResource buttonsStyle}" HorizontalAlignment="Center" Width="100" Height="30" Margin="0,0,0,30" Grid.Row="20" VerticalAlignment="Bottom" IsEnabled="False"  Click="reloadButton_Click"  />
                </Grid>
                <StackPanel Grid.Column="0">

                    <Button x:Name="Menu_Project_Unload" Command="local:Commands.UnloadProject"  Style="{DynamicResource projectButtons}" HorizontalContentAlignment="Left">
                        <StackPanel  Margin="10,0,0,0">
                            <Label Content="{x:Static ln:Strings.Unload}" Foreground="White"/>
                            <Label Content="Ctrl+F4" FontSize="15" VerticalAlignment="Center" Foreground="White"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="Menu_Project_SaveAs"   Command="local:Commands.SaveProjectAs" Style="{DynamicResource projectButtons}" HorizontalContentAlignment="Left">
                        <StackPanel   Margin="10,0,0,0">
                            <Label Content="{x:Static ln:Strings.SaveAs}" Foreground="White"/>
                            <Label Content="Ctrl+Shift+S" FontSize="15" VerticalAlignment="Center" Foreground="White"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="Menu_Project_Save"   Command="local:Commands.SaveProject" Style="{DynamicResource projectButtons}" HorizontalContentAlignment="Left">
                        <StackPanel Margin="10,0,0,0">
                            <Label Content="{x:Static ln:Strings.Save}" Foreground="White"/>
                            <Label Content="Ctrl+S" FontSize="15" VerticalAlignment="Center" Foreground="White"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                    
                    




                <!--<Grid.Effect>
                <DropShadowEffect BlurRadius="15" Direction="-90"
                              RenderingBias="Quality" ShadowDepth="2"/>
            </Grid.Effect>-->

                <!--<PdfViewer:PdfDocumentView x:Name="pdfDocumentView" HorizontalAlignment="Center"  Grid.Column="1" Grid.Row="1" SizeChanged="pdfDocumentView_SizeChanged" />-->

                <!--<Label x:Name="loadedPdfLabel" Content="" Grid.Row="1" HorizontalAlignment="Center" Margin="0,351,0,0" Grid.Column="2" VerticalAlignment="Top"/>-->



            </Grid >
            <Grid x:Name="resultswindiw" Visibility="Hidden">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TabControl x:Name="tabsHorizontal"  TabStripPlacement="Left" Grid.Column="0"/>

                <StackPanel x:Name="namesPanel" Grid.Column="1">
                    <MenuItem Header="Name"/>
                </StackPanel>
                <ListView x:Name="allResults" Grid.Column="2">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Height" Value="40" />
                            <!--should by same as height of Image-->
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="">
                            <GridViewColumn DisplayMemberBinding="{Binding Path=Index}"  Header="{x:Static ln:Strings.Index}" Width="30"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Path=PointsText}"  Header="{x:Static ln:Strings.RightOverAnswered}" Width="50"/>            <!--(x) name=columnPointsOfAll-->
                            <GridViewColumn DisplayMemberBinding="{Binding Path=Percents}"  Header="{x:Static ln:Strings.Percents}" Width="50"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Path=Grade}"  Header="{x:Static ln:Strings.Grade}" Width="50"/>


                        </GridView>
                    </ListView.View>
                </ListView>

            </Grid>
            <Grid x:Name="editWindow" Visibility="Hidden"  >
                <Grid>
                    <PdfViewer:PdfViewerControl x:Name="pdfViewControl"   Margin="-40,0,260,0" />
                    <Canvas>
                    <StackPanel  Background="AliceBlue"   Canvas.Right="0"                            HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,0,0" Grid.Column="0">
                        <StackPanel x:Name="toolMenu">

                            <MenuItem x:Name="Menu_NewPage" Header="{x:Static ln:Strings.NewPage}" Click="Menu_NewPage_Click" Style="{DynamicResource meIStyle}"/>
                            <MenuItem x:Name="deletePage"   Header="{x:Static ln:Strings.DeletePage}" Click="deletePage_Click" Style="{DynamicResource meIStyle}"/>
                            <MenuItem x:Name="nameField"    Header="{x:Static ln:Strings.NameField}" Click="CheckMenuItem" IsCheckable="True" Checked="nameField_Checked" Unchecked="nameField_Unchecked" Command="local:Commands.NameField" Style="{DynamicResource meIStyle}"/>
                            <MenuItem x:Name="answerFiewld" Header="{x:Static ln:Strings.AnswerField}" Click="CheckMenuItem" IsCheckable="True" Checked="b_Checked" Unchecked="b_Unchecked" Command="local:Commands.AnswerField" Style="{DynamicResource meIStyle}" />
                            <MenuItem x:Name="boxex"        Header="{x:Static ln:Strings.AnswerBoxes}" Click="CheckMenuItem" IsCheckable="True" Checked="e_Checked" Unchecked="e_Unchecked " Command="local:Commands.AnswerBoxes" Style="{DynamicResource meIStyle}"/>
                            <MenuItem x:Name="toogleAn"     Header="{x:Static ln:Strings.ToogleCorrect}" IsCheckable="True" Checked="toogleAn_Checked" Unchecked="toogleAn_Unchecked" Style="{DynamicResource meIStyle}" InputGestureText="{x:Static ln:Strings.AltHold}"/>
                        </StackPanel>
                        <Canvas x:Name="editRightCanvas"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Width="260" Margin="0,0,0,0" Height="1000">
                            <Label Content="{x:Static ln:Strings.widthofbound}"             Canvas.Top="7"     Canvas.Right="140"/>
                            <TextBox x:Name="widthLabel"                  Canvas.Top="10"      Canvas.Right="120"  Text="{Binding ElementName=widthSlider,Path=Value }" MaxWidth="20"/>
                            <Slider x:Name="widthSlider" Maximum="8"    Canvas.Top="10"      Canvas.Right="15" Value="2" Width="100" ValueChanged="Slider_ValueChanged"     IsSnapToTickEnabled="True"    TickFrequency="0.1"/>


                            <Label Content="{x:Static ln:Strings.sizeofbox}"               Canvas.Top="32"  Canvas.Right="140"/>
                            <TextBox x:Name="sizeLabel"                  Canvas.Top="35"    Canvas.Right="120"  Text="{Binding ElementName=sizeSlider,Path=Value }" MaxWidth="20"/>
                            <Slider x:Name="sizeSlider" Maximum="40"    Canvas.Top="35"     Canvas.Right="15" Width="100" Value="20" ValueChanged="Slider_ValueChanged"                         IsSnapToTickEnabled="True"    TickFrequency="0.01"/>


                            <Label Content="{x:Static ln:Strings.spacebetween}"              Canvas.Top="57"     Canvas.Right="140"/>
                            <TextBox x:Name="spaceLabel"                  Canvas.Top="60"      Canvas.Right="120" Text="{Binding ElementName=spaceSlider,Path=Value }" MaxWidth="20"/>
                            <Slider x:Name="spaceSlider" Maximum="50"   Canvas.Top="60"      Canvas.Right="15" Value="10" Width="100" ValueChanged="Slider_ValueChanged"    IsSnapToTickEnabled="True"    TickFrequency="0.1"/>

                            <Label Content="{x:Static ln:Strings.Count}"                      Canvas.Top="82"     Canvas.Right="140"/>
                            <TextBox x:Name="countLabel"                  Canvas.Top="85"      Canvas.Right="120"  Text="{Binding ElementName=countSlider,Path=Value }"/>
                            <Slider x:Name="countSlider" Maximum="10"   Canvas.Top="85"      Canvas.Right="15" Value="4" Width="100" ValueChanged="Slider_ValueChanged"     IsSnapToTickEnabled="True"    TickFrequency="1" />
                            
                            <Grid x:Name="previewGrid" Canvas.Left="10" Canvas.Top="130" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" Width="75" Height="20" Canvas.Top="-20" MouseDown="Button_MouseDown" Panel.ZIndex="1" Content="{x:Static ln:Strings.DragLeft}" FontSize="8" Background="#FF88DDFF"/>
                                <Canvas Grid.Row="1" x:Name="preview"   Height="200" Width="75"/>
                                <!--<Button Grid.Row="2"  x:Name="editPrintBoxes" Click="editPrintBoxes_Click" Content="{x:Static ln:Strings.Print}" Background="#FF6699CC"/>-->
                            </Grid>
                            
                            <Button x:Name="undoBButton" Content="{x:Static ln:Strings.UndoBox}" Style="{DynamicResource undoButtStyle}" Canvas.Top="175"     Canvas.Right="20" Click="undoBButton_Click" />
                            <Button x:Name="undoQButton" Content="{x:Static ln:Strings.UndoQuestion}" Style="{DynamicResource undoButtStyle}" Canvas.Top="200"     Canvas.Right="20" Command="local:Commands.UndoQuestion"/>
                            <Button x:Name="undoFButton" Content="{x:Static ln:Strings.UndoField}" Style="{DynamicResource undoButtStyle}" Canvas.Top="225"     Canvas.Right="20" Click="undoFButton_Click"/>
                            <Button x:Name="undoNFButton" Content="{x:Static ln:Strings.UndoNameField}" Style="{DynamicResource undoButtStyle}" Canvas.Top="250"    Canvas.Right="20" Click="undoNFButton_Click"/>

                            <TextBlock  Canvas.Top="300"     Canvas.Right="20" TextAlignment="Right" Text="{x:Static ln:Strings.UndoNotCompatible}"  />
                            <!--<TextBlock  Canvas.Top="350"     Canvas.Right="20" TextAlignment="Right" Text="{x:Static ln:Strings.autosaveAffirmation}" />-->


                        </Canvas>
                    </StackPanel>
                    </Canvas>

                    <Rectangle x:Name="rectangleR" Stroke="Black" Visibility="Hidden" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
                </Grid>
            </Grid>

        </Grid>
    </Grid>
    <Window.Resources>
        <Image Source="/Resources/imag.ico" x:Key="iconimage" x:Shared="false"/>
        <Image Source="/Resources/icons8-lock-128.ico" x:Key="lockIcon" x:Shared="false" />


        <ListView x:Key="lview" Background="LightCyan" x:Shared="false" >

            <ListView.View>

                <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="">
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Number}"  Header="{x:Static ln:Strings.Number}" Width="40"/>

                    <GridViewColumn DisplayMemberBinding="{Binding Path=Checked}"  Header="{x:Static ln:Strings.Checked}" Width="100"/>

                    <GridViewColumn DisplayMemberBinding="{Binding Path=RightAnswer }" Width="100" Header="{x:Static ln:Strings.RightAnswer}"/>

                    <GridViewColumn DisplayMemberBinding="{Binding Path=Correct}" Header="{x:Static ln:Strings.Correct}" Width="100"/>
                </GridView>

            </ListView.View>
        </ListView>
        <ListView x:Key="lfieldsview" Background="LightCyan" x:Shared="false" >

            <ListView.View>

                <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="">
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Number}"  Header="{x:Static ln:Strings.Number}" Width="40"/>

                    <GridViewColumn DisplayMemberBinding="{Binding Path=Correct}" Header="{x:Static ln:Strings.Correct}" Width="100"/>
                </GridView>

            </ListView.View>
        </ListView>
        <!--<ScrollViewer x:Key="scr">
            
        </ScrollViewer>-->
        <!--<TabItem x:Key="leftdef" Selector.Selected="leftdef_Selected" Selector.Unselected="TabItem_Unselected" x:Shared="false"/>-->
        <Button x:Key="butView" x:Shared="false"  Background="Cyan"/>
        <Style x:Key="menuStyle" TargetType="Menu">
            <Setter Property="Background" Value= "Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="2,0"/>
        </Style>
        <Style x:Key="meIStyle" TargetType="MenuItem" >
            <Setter Property="Height" Value="25"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#FF0669AC"/>
            <Setter Property="Background" Value="#FF2B99CC"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="undoButtStyle" TargetType="Button">
            <Setter Property="Width" Value="120"/>
            <Setter Property="Background" Value="#FF99CCFF"/>
            <Setter Property="BorderBrush" Value="#FF2B8899"/>

        </Style>
        <Style x:Key="recentprojectstyle" TargetType="Button">
            <Setter Property="Background" Value="#FF99CCFF"/>
            <Setter Property="Height" Value="50"/>
        </Style>

        <SolidColorBrush x:Key="menuBrushBackground">
            <SolidColorBrush.Color>
                <Color A="255" R="43" G="87" B="154"/>
                <!-- #FF2B5799-->
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <Style x:Key="dockstyle" TargetType="DockPanel">
            <Setter Property="Background" Value="{DynamicResource menuBrushBackground}"/>
        </Style>
        <Style x:Key="mIStyle" TargetType="MenuItem">
            <Setter Property="Background" Value="{DynamicResource menuBrushBackground}"/>
        </Style>
        <Style x:Key="buttonsStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush>
                        <SolidColorBrush.Color>
                            <Color A="50" R="0" G="100" B="255"/>
                            <!--FF80A0FF-->
                        </SolidColorBrush.Color>
                    </SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#7D292990"/>
        </Style>
        <Style x:Key="projectButtons" TargetType="Button">
            <Setter Property="Height" Value="100"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Background" Value="#FF2B5799"/>
            <Setter Property="Foreground" Value="White"/>
            

        </Style>

        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CornerRadius="0" GlassFrameThickness="1" ResizeBorderThickness="0" CaptionHeight="0"></WindowChrome>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FF2B5799"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF2B5799"/>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="White"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="LightBlue"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="LightGray"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#4D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="templateRoot" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.Row="1">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
                    <ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
                    <ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=templateRoot}">
                        <Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderThickness="1" BorderBrush="{StaticResource Menu.Static.Border}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{StaticResource Menu.Static.Separator}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Selected.Background}" BorderThickness="1" BorderBrush="{StaticResource MenuItem.Selected.Border}" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Highlight.Background}" BorderThickness="1" BorderBrush="{StaticResource MenuItem.Highlight.Border}" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="9"/>
                    </Border>
                    <ContentPresenter ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderThickness="1" BorderBrush="{StaticResource Menu.Static.Border}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommandBinding_Executed"/>
        <CommandBinding Command="local:Commands.NameField" Executed="CommandBindingNameField_Executed" CanExecute="CommandBinding_CanExecuteIfEdit" />
        <CommandBinding Command="local:Commands.AnswerField" Executed="CommandBindingFields_Executed" CanExecute="CommandBinding_CanExecuteIfEdit" />
        <CommandBinding Command="local:Commands.AnswerBoxes" Executed="CommandBindingBoxes_Executed" CanExecute="CommandBinding_CanExecuteIfEdit"/>
        <CommandBinding Command="local:Commands.UndoQuestion" Executed="CommandBindingUndoQ_Executed" CanExecute="CommandBinding_CanExecuteIfEdit"/>
        
        <CommandBinding Command="local:Commands.SaveProjectAs" Executed="CommandBinding_saveAs_Executed" CanExecute="CommandBinding_CanExecuteIfSaveAsEnebled"/>
        <CommandBinding Command="local:Commands.SaveProject" Executed="CommandBinding_save_Executed" CanExecute="CommandBinding_CanExecuteIfSaveAsEnebled"/>
        <CommandBinding Command="local:Commands.UnloadProject" Executed="CommandBinding_Unload_Executed" CanExecute="CommandBinding_CanExecuteIfSaveAsEnebled"/>

        <CommandBinding Command="local:Commands.MainView" Executed="CommandBinding_MainView_Executed" CanExecute="CommandBinding_CanExecuteTRUE"/>
        <CommandBinding Command="local:Commands.EditView" Executed="CommandBinding_Edit_Executed" CanExecute="CommandBinding_CanExecuteIfEditEnebled"/>
        <CommandBinding Command="local:Commands.ResultView" Executed="CommandBinding_ResultView_Executed" CanExecute="CommandBinding_CanExecuteIfResultsEnebled"/>


    </Window.CommandBindings>

</Window>
